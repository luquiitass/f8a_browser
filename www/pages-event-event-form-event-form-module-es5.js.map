{"version":3,"sources":["webpack:///src/app/pages/event/event-form/event-form.page.html","webpack:///src/app/pages/event/event-form/event-form-routing.module.ts","webpack:///src/app/pages/event/event-form/event-form.module.ts","webpack:///src/app/pages/event/event-form/event-form.page.scss","webpack:///src/app/pages/event/event-form/event-form.page.ts"],"names":["routes","path","component","EventFormPageRoutingModule","imports","forChild","exports","EventFormPageModule","declarations","EventFormPage","navParams","requestService","dialogService","viewCtrl","twoTeam","myDateFilter","d","day","getDay","gameModel","eventModel","game_id","get","id","team_admin","init","loadEvent","event","type_event_id","player_id","team_id","time","api_function","subscribe","data","dataEvent","types_events","console","log","team","teams","find","t","players","api_update","showToast","dismiss","api_create","selector","template"],"mappings":"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","file":"pages-event-event-form-event-form-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Evento</ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button color=\\\"dark\\\" (click)=\\\"close()\\\">\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      </ion-button>\\n  </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <form (ngSubmit)=\\\"submit()\\\"  (keyup)=\\\"eventModel.errorsForm.clear()\\\" *ngIf=\\\"dataEvent\\\">\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Tipo de Evento</ion-label>\\n      <ion-select [(ngModel)]=\\\"event.type_event_id\\\" name=\\\"type_event_id\\\">\\n        <ion-select-option [value]=\\\"type_event.id\\\" *ngFor=\\\"let type_event of dataEvent.types_events\\\">{{ type_event.name }}</ion-select-option>\\n      </ion-select>\\n      <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ eventModel.errorsForm.get('type_event_id') }}</div>\\n    </ion-item>\\n    \\n    <ion-item *ngIf=\\\"!team_admin || twoTeam\\\">\\n      <ion-label position=\\\"floating\\\">Equipo</ion-label>\\n      <ion-select [(ngModel)]=\\\"event.team_id\\\" name=\\\"team_id\\\">\\n        <ion-select-option [value]=\\\"team.id\\\" *ngFor=\\\"let team of dataEvent.teams\\\">{{ team.name }}</ion-select-option>\\n      </ion-select>\\n      <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ eventModel.errorsForm.get('team_id') }}</div>\\n    </ion-item>\\n \\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Jugador</ion-label> \\n       <ion-select [(ngModel)]=\\\"event.player_id\\\" name=\\\"player_id\\\">\\n        <ion-select-option [value]=\\\"player.id\\\" *ngFor=\\\"let player of getPlayers()\\\">{{ player.name }}</ion-select-option>\\n      </ion-select>\\n      <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ eventModel.errorsForm.get('player_id') }}</div>\\n    </ion-item>\\n\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" >Tiempo</ion-label>\\n      <ion-input type=\\\"number\\\" [(ngModel)]=\\\"event.time\\\" name=\\\"time\\\"></ion-input>\\n    </ion-item>\\n    <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ eventModel.errorsForm.get('time') }}</div> \\n\\n    <ion-button type=\\\"submit\\\"  expand=\\\"block\\\">Guardar</ion-button>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EventFormPage } from './event-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventFormPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventFormPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EventFormPageRoutingModule } from './event-form-routing.module';\n\nimport { EventFormPage } from './event-form.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EventFormPageRoutingModule\n  ],\n  declarations: [EventFormPage]\n})\nexport class EventFormPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V2ZW50L2V2ZW50LWZvcm0vZXZlbnQtZm9ybS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Model } from 'src/app/api/models/model';\nimport { IonItem, NavParams, ModalController } from '@ionic/angular';\nimport { RequestService } from 'src/app/api/request.service';\nimport { DialogService } from 'src/app/api/util/dialog.service';\n\n@Component({\n  selector: 'app-event-form',\n  templateUrl: './event-form.page.html',\n  styleUrls: ['./event-form.page.scss'],\n})\nexport class EventFormPage implements OnInit {\n\n  gameModel : Model;\n  eventModel : Model;\n  game_id : any ;\n  dataEvent : any;\n  event : any;\n  id : any;\n  types_events : [];\n  team_admin : any;\n  twoTeam = false;\n\n  constructor(\n    public navParams : NavParams,\n    public requestService : RequestService,\n    public dialogService : DialogService,\n    public viewCtrl: ModalController,\n\n\n  ) {\n      this.gameModel = new Model('Game',requestService)\n      this.eventModel = new Model('Event',requestService)\n      this.game_id = navParams.get('game_id') ;\n      this.twoTeam = navParams.get('twoTeam');\n      this.id = navParams.get('id');\n      this.team_admin = navParams.get('team_admin');\n\n   }\n\n  async ngOnInit() {\n    await this.init();\n    this.loadEvent();\n  }\n\n\n  loadEvent(){\n    if(this.id){\n\n    }else{\n      this.event = {\n        game_id : this.game_id,\n        type_event_id : '',\n        player_id : '',\n        team_id : this.team_admin ? this.team_admin.id : '',\n        time : ''\n      }\n    }\n  }\n\n\n  async init(){\n    await this.eventModel.api_function('dataEventCreate',{game_id : this.game_id }).subscribe(\n      data => {\n        if(data['status'] == 'success'){\n          this.dataEvent = data['data'];\n          this.types_events = this.dataEvent['types_events'];\n        }\n        console.log('ty',this.types_events);\n        console.log(this.dataEvent);\n\n      }\n    )\n  }\n\n  getPlayers(){\n    let id = this.event.team_id; \n    \n    if(this.team_admin)\n      id = this.event.team_id;\n    \n    if(id){\n      let team = this.dataEvent.teams.find(t => t.id === id );\n      if(team)\n        return team.players;\n    }\n    return [];\n  }\n\n\n  submit(){\n    if(this.event.id){\n      this.eventModel.api_update(this.event).subscribe(data => {\n        if(data['status'] == 'success'){\n          this.dialogService.showToast( data['msjSuccess'] ?? 'Registrado' );\n          console.log(data);\n          this.dismiss(data['Event'])\n        }\n      });\n\n    }else{\n      this.eventModel.api_create(this.event).subscribe(data => {\n        if(data['status'] == 'success'){\n          this.dialogService.showToast( data['msjSuccess'] ?? 'Registrado' );\n          this.dismiss(data['Event'])\n        }\n    })\n    }\n  }\n\n  dismiss(event) {\n    this.viewCtrl.dismiss(\n      {\n        event : event,\n      }\n    );\n  }\n\n  close(){\n    this.viewCtrl.dismiss();\n  }\n\n  myDateFilter = (d: Date): boolean => {\n    const day = d.getDay();\n    // Prevent Saturday and Sunday from being selected.\n    return day == 6 ;\n  }\n\n  print(){\n    console.log(this.event);\n  }\n\n}\n"]}