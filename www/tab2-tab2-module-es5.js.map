{"version":3,"sources":["webpack:///src/app/tab2/tab2.page.html","webpack:///src/app/services/photo.service.ts","webpack:///src/app/tab2/tab2-routing.module.ts","webpack:///src/app/tab2/tab2.module.ts","webpack:///src/app/tab2/tab2.page.scss","webpack:///src/app/tab2/tab2.page.ts"],"names":["Camera","Filesystem","Storage","PhotoService","request","photos","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","serviceImage","url","thumb","pathDefault","path","photo","Photo","image","getPhoto","resultType","Uri","source","quality","capturedPhoto","readAsBase64","base64Data","unshift","webPath","data","cameraPhoto","fetch","response","isLoadPthoto","id","api_update","api_create","providedIn","filepath","webviewPath","routes","component","Tab2PageRoutingModule","imports","forChild","exports","Tab2PageModule","declarations","Tab2Page","photoService","addNewToGallery","selector","template"],"mappings":"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","file":"tab2-tab2-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Photo Gallery</ion-title>  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-grid>\\n    <ion-row>\\n    <ion-col size=\\\"6\\\" \\n      *ngFor=\\\"let photo of photoService.photos; index as position\\\">\\n        <ion-img [src]=\\\"photo.webviewPath\\\"></ion-img>\\n    </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"center\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"addPhotoToGallery()\\\">\\n      <ion-icon name=\\\"camera\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\";","import { Injectable } from '@angular/core';\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, \n  CameraPhoto, CameraSource } from '@capacitor/core';\nimport { Model } from '../api/models/model';\nimport { RequestService } from '../api/request.service';\n\nconst { Camera, Filesystem, Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n\n  public photos: Photo[] = [];\n\n  public photo : any;\n  public url :string ;\n  public thumb : boolean ;\n  public serviceImage : Model;\n  public image : any ;\n  public path : string;\n\n  constructor(request : RequestService) { \n      this.serviceImage = new Model('Image',request);\n  }\n\n  public init(url : string, thumb : boolean = true,pathDefault = 'assets/images/pngwing.png'){\n      this.url = url ?? '/images/';\n      this.thumb = thumb ?? false ;\n      this.path = pathDefault;\n      this.photo = new Photo(pathDefault);\n  }\n\n  setImage(image){\n    this.image = image;\n    this.photo.image = image;\n  }\n\n  public async addNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, \n      source: CameraSource.Camera, \n      quality: 100 \n    });\n\n\n\n    const base64Data = await this.readAsBase64(capturedPhoto);\n\n  \n    this.photos.unshift(new Photo(null,capturedPhoto.webPath, base64Data, this.url, this.thumb));\n  }\n\n\n  public async addOneNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, \n      source: CameraSource.Camera, \n      quality: 100 \n    });\n  \n    const base64Data = await this.readAsBase64(capturedPhoto);\n\n    this.photo = new Photo(capturedPhoto.webPath,base64Data, base64Data, this.url, this.thumb, this.image);\n\n  \n  }\n\n  public isLoadPthoto() {\n    return  this.photo.data? true : false;\n  }\n\n  private async readAsBase64(cameraPhoto: CameraPhoto) {\n    // Fetch the photo, read as a blob, then convert to base64 format\n    const response = await fetch(cameraPhoto.webPath!);\n    const blob = await response.blob();\n  \n    return await this.convertBlobToBase64(blob) as string;  \n  }\n  \n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onload = () => {\n        resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n\n\n  uploadImage(){\n    if(this.isLoadPthoto()){\n      if(this.photo.id){\n        return this.serviceImage.api_update(this.photo);\n      }else{\n        return this.serviceImage.api_create(this.photo);\n      }\n    }\n  }\n}\n\nexport class Photo {\n  id? : string;\n  filepath: string;\n  webviewPath: string;\n  data :string;\n  url : string;\n  thumb : boolean;\n  image ? :{}\n\n  constructor(  filepath : string = \"assets/images/pngwing.png\",webviewPath : string = null,data :string = '',url : string = '',thumb : boolean = false , image : any = null){\n    this.id = image ? image.id : '';\n    this.webviewPath = webviewPath;\n    this.filepath = filepath;\n    this.data = data;\n    this.url = url;\n    this.thumb = thumb;\n    this.image = image\n  }\n\n  getPath(){\n    if(this.webviewPath){\n      return this.webviewPath;\n    }\n    else if(this.image && this.image['urlComplete'] ){\n      return this.image['urlComplete'];\n    }else{\n      return this.filepath;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab2Page } from './tab2.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab2Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab2PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab2Page } from './tab2.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab2PageRoutingModule } from './tab2-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab2PageRoutingModule\n  ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYjIvdGFiMi5wYWdlLnNjc3MifQ== */\";","import { Component } from '@angular/core';\nimport { PhotoService } from '../services/photo.service';\n\n\n@Component({\n  selector: 'app-tab2',\n  templateUrl: 'tab2.page.html',\n  styleUrls: ['tab2.page.scss']\n})\nexport class Tab2Page {\n\n  constructor(public photoService: PhotoService) {}\n\n\n  addPhotoToGallery() {\n    this.photoService.addNewToGallery();\n  }\n\n}\n"]}