{"version":3,"sources":["webpack:///src/app/pages/user/my-profile/my-profile.page.html","webpack:///src/app/pages/user/my-profile/my-profile-routing.module.ts","webpack:///src/app/pages/user/my-profile/my-profile.module.ts","webpack:///src/app/pages/user/my-profile/my-profile.page.scss","webpack:///src/app/pages/user/my-profile/my-profile.page.ts","webpack:///src/app/services/transfer-data.service.ts"],"names":["routes","path","component","MyProfilePageRoutingModule","imports","forChild","exports","MyProfilePageModule","declarations","MyProfilePage","authUser","requestService","modalController","transferData","userModel","setData","id","console","log","init","event","user","api_functionModel","subscribe","respose","target","complete","error","photo","urlComplete","create","componentProps","modal","onDidDismiss","then","data","item","first_name","last_name","email","setUser","present","selector","template","TransferDataService","callbaks","key","value","hasOwnProperty","page","callbak","parms","providedIn"],"mappings":"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","file":"pages-user-my-profile-my-profile-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title> {{ user ? user.last_name +' '+user.first_name : 'My Perfil'}}</ion-title>\\n\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button (click)=\\\"showEdit()\\\">\\n        <ion-icon name=\\\"create\\\"></ion-icon>      \\n      </ion-button>\\n    </ion-buttons>\\n\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"init($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-card *ngIf=\\\"user\\\">\\n    <ion-card-content>\\n\\n      <ion-img-viewer \\n        title=\\\"Foto de Perfil\\\" \\n        [text]=\\\"user.last_name +' '+ user.first_name\\\"\\n        scheme=\\\"dark\\\" \\n        [src]=\\\"getPhoto()\\\">\\n      </ion-img-viewer>\\n\\n    </ion-card-content>\\n    <ion-card-header>\\n      <ion-card-title>\\n        {{user.last_name}} {{user.first_name}}\\n      </ion-card-title>\\n\\n      <ion-card-subtitle>{{user.email}}</ion-card-subtitle>\\n    </ion-card-header>\\n  </ion-card>\\n\\n\\n  <ion-card *ngIf=\\\"user && user.teams\\\">\\n    <ion-card-header>\\n      <ion-card-title>Mis Equipos</ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item *ngFor=\\\"let team of user.teams\\\" routerLink=\\\"/team/profile/{{team.id}}\\\" routerDirection=\\\"forward\\\">\\n            {{team.name}}\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card *ngIf=\\\"user && user.player\\\">\\n    <ion-card-header>\\n      <ion-card-title>Mi perfil de Jugador</ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <ion-list>\\n        <ion-item routerLink=\\\"/player/profile/{{user.player.id}}\\\" routerDirection=\\\"forward\\\">\\n            {{user.player.name}}\\n        </ion-item>\\n      </ion-list>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MyProfilePage } from './my-profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MyProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MyProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MyProfilePageRoutingModule } from './my-profile-routing.module';\n\nimport { MyProfilePage } from './my-profile.page';\nimport { NgxIonicImageViewerModule } from 'ngx-ionic-image-viewer';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MyProfilePageRoutingModule,\n    NgxIonicImageViewerModule\n  ],\n  declarations: [MyProfilePage]\n})\nexport class MyProfilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXIvbXktcHJvZmlsZS9teS1wcm9maWxlLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { AuthUserService } from 'src/app/services/auth-user.service';\nimport { Model } from 'src/app/api/models/model';\nimport { RequestService } from 'src/app/api/request.service';\nimport { ModalController } from '@ionic/angular';\nimport { UserFormPage } from '../user-form/user-form.page';\nimport { TransferDataService } from 'src/app/services/transfer-data.service';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.page.html',\n  styleUrls: ['./my-profile.page.scss'],\n})\nexport class MyProfilePage implements OnInit {\n\n  private user : any;\n  private userModel : Model;\n\n\n  constructor(\n    public authUser : AuthUserService,\n    public requestService : RequestService,\n    public modalController: ModalController,\n    public transferData : TransferDataService,\n  ) { \n    this.userModel = new Model('User',requestService);\n    transferData.setData('test',{id : 'id_lucas_data'});\n    console.log('set data transfer in My Profile', {id : 'id_lucas_data'})\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  async init(event = null){\n    \n    this.user = this.authUser.user; //await this.authUser.getUser();\n    console.log('authUser user' , this.user)\n\n    if(this.user){\n      this.userModel.api_functionModel(this.user.id,'pageMyProfile').subscribe(\n        respose => {\n          console.log('init myProfile',respose)\n          if(respose['status'] == 'success'){\n            this.user = respose['data'];\n            //this.authUser.updateUser(this.user);\n          }\n          if(event)\n            event.target.complete();\n        },\n        error => {\n          console.error(error)\n          if(event)\n            event.target.complete();\n        }\n      \n        )\n    }\n  }\n\n  getPhoto(){\n    return (this.user && this.user.photo ) ? this.user.photo.urlComplete : 'assets/images/profile.jpg' ; \n  }\n\n  async showEdit(){\n    const modal = await this.modalController.create({\n      component: UserFormPage ,\n      componentProps: { id: this.user.id }\n    });\n\n    modal.onDidDismiss().then(async data=>{\n      console.log(data);\n      if(data.data && data.data['user']){\n        let item = data.data['user']\n        this.user.first_name = item.first_name;\n        this.user.last_name = item.last_name;\n        this.user.photo = item.photo;\n        this.user.email = item.email;\n\n        await this.authUser.setUser(this.user);\n      }\n\n    })\n\n    return await modal.present();\n   }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransferDataService {\n\n  public data : any = {};\n  public callbaks : any  = {};\n\n  constructor() { }\n\n  setData(key, value){\n    this.data[key] = value;\n  }\n\n  getData(key){\n    if(this.data.hasOwnProperty(key))\n      return this.data[key];\n    return null;\n  }\n\n  clear(key = null){\n    if(this.data.hasOwnProperty(key)){\n      delete this.data[key];\n      return;\n    }\n\n    this.data = {};\n  }\n\n  /**\n   * Añade la funcion que se ejecutara al ejecutar setDataPage \n   * @param page Key de la pagina que deebra obtener los dato\n   * @param callbak funcion que recibe un parametro\n   */\n\n  onSettDataPage(page , callbak){\n    this.callbaks[page] = callbak\n  }\n\n  /**\n   * Ejecuta la funcion que recibe el parametro ingresado en esta funcion\n   * @param page pagina actual\n   * @param parms parametros \n   */\n  setDataPage(page,parms){\n    if( this.callbaks.hasOwnProperty(page))\n      this.callbaks[page](parms)\n  }\n\n}\n"]}