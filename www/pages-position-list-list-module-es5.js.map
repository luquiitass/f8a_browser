{"version":3,"sources":["webpack:///src/app/pages/position/list/list.page.html","webpack:///src/app/pages/position/list/list-routing.module.ts","webpack:///src/app/pages/position/list/list.module.ts","webpack:///src/app/pages/position/list/list.page.scss","webpack:///src/app/pages/position/list/list.page.ts","webpack:///src/app/services/photo.service.ts"],"names":["routes","path","component","ListPageRoutingModule","imports","forChild","exports","ListPageModule","declarations","ListPage","request","dialogService","modalController","dialog","positionService","api_all","create","modal","onDidDismiss","then","data","posicion","listAddLast","present","componentProps","id","console","log","listUpdate","presentAlertConfirm","e","api_delete","subscribe","showToast","listDelete","selector","template","Camera","Filesystem","Storage","PhotoService","photos","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","serviceImage","url","thumb","pathDefault","photo","Photo","image","getPhoto","resultType","Uri","source","quality","capturedPhoto","readAsBase64","base64Data","unshift","webPath","cameraPhoto","fetch","response","isLoadPthoto","api_update","api_create","providedIn","filepath","webviewPath"],"mappings":"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","file":"pages-position-list-list-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"admin_home\\\"></ion-back-button>    \\n    </ion-buttons>\\n    <ion-title>Posiciones</ion-title>\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button (click)=\\\"openModal()\\\">\\n        <ion-icon name=\\\"add-outline\\\"></ion-icon>      \\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"positionService.api_all($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-list>\\n      \\n      <ion-list-header *ngIf=\\\"positionService.list.length == 0\\\"  color=\\\"tertiary\\\">\\n        <ion-label>Sin registros</ion-label>\\n      </ion-list-header>\\n   \\n      <ion-item *ngFor=\\\"let item of positionService.list\\\" >\\n          \\n        <ion-label >\\n          <h3>{{item.name}}</h3>\\n        </ion-label>\\n\\n        <ion-buttons slot=\\\"end\\\">\\n          <ion-button (click)=\\\"showEdit(item)\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"create-outline\\\"></ion-icon>\\n          </ion-button>\\n          <ion-button (click)=\\\"confirmDelete(item)\\\">\\n            <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\n          </ion-button>\\n        </ion-buttons>\\n\\n      </ion-item>\\n    </ion-list>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListPageRoutingModule } from './list-routing.module';\n\nimport { ListPage } from './list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListPageRoutingModule\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Bvc2l0aW9uL2xpc3QvbGlzdC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\nimport { RequestService } from '../../../api/request.service';\nimport { ModalController } from '@ionic/angular';\nimport { PositionFormPage } from '../../../pages/position/position-form/position-form.page';\nimport { DialogService } from '../../../api/util/dialog.service';\nimport { Model } from 'src/app/api/models/model';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.page.html',\n  styleUrls: ['./list.page.scss'],\n})\nexport class ListPage implements OnInit {\n\n  public positionService : Model ;\n\n\n  constructor(\n    public request : RequestService,\n    public dialogService : DialogService,\n    public modalController: ModalController,\n    public dialog : DialogService\n  ) {\n    this.positionService = new Model('Position',request)\n  }\n  \n  ngOnInit(): void {\n    //this.positionService.setModel('Position');\n    this.positionService.api_all();\n  }\n\n\n  async openModal() {\n    const modal = await this.modalController.create({\n      component: PositionFormPage ,\n    });\n\n    modal.onDidDismiss().then(data=>{\n      const posicion = data.data['posicion'];\n      this.positionService.listAddLast(posicion);\n    })\n\n    return await modal.present();\n   }\n\n   async showEdit(posicion){\n    const modal = await this.modalController.create({\n      component: PositionFormPage ,\n      componentProps: { id: posicion.id }\n    });\n\n    modal.onDidDismiss().then(data=>{\n      console.log(data);\n      this.positionService.listUpdate(posicion.id,posicion);\n\n    })\n\n    return await modal.present();\n   }\n\n   confirmDelete(posicion){\n    this.dialog.presentAlertConfirm('Confirmar','Estas seguro de eliminar este posicion',e => {\n      this.delete(posicion)\n    });\n   }\n\n   delete(posicion){\n     this.positionService.api_delete(posicion.id).subscribe(data => {\n       console.log(data);\n       if(data['status'] == 'success'){\n         this.dialog.showToast('Position Eliminado',null,'success');\n         this.positionService.listDelete(posicion.id);\n       }\n     });\n   }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, \n  CameraPhoto, CameraSource } from '@capacitor/core';\nimport { Model } from '../api/models/model';\nimport { RequestService } from '../api/request.service';\n\nconst { Camera, Filesystem, Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n\n  public photos: Photo[] = [];\n\n  public photo : any;\n  public url :string ;\n  public thumb : boolean ;\n  public serviceImage : Model;\n  public image : any ;\n  public path : string;\n\n  constructor(request : RequestService) { \n      this.serviceImage = new Model('Image',request);\n  }\n\n  public init(url : string, thumb : boolean = true,pathDefault = 'assets/images/pngwing.png'){\n      this.url = url ?? '/images/';\n      this.thumb = thumb ?? false ;\n      this.path = pathDefault;\n      this.photo = new Photo(pathDefault);\n  }\n\n  setImage(image){\n    this.image = image;\n    this.photo.image = image;\n  }\n\n  public async addNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, \n      source: CameraSource.Camera, \n      quality: 100 \n    });\n\n\n\n    const base64Data = await this.readAsBase64(capturedPhoto);\n\n  \n    this.photos.unshift(new Photo(null,capturedPhoto.webPath, base64Data, this.url, this.thumb));\n  }\n\n\n  public async addOneNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, \n      source: CameraSource.Camera, \n      quality: 100 \n    });\n  \n    const base64Data = await this.readAsBase64(capturedPhoto);\n\n    this.photo = new Photo(capturedPhoto.webPath,base64Data, base64Data, this.url, this.thumb, this.image);\n\n  \n  }\n\n  public isLoadPthoto() {\n    return  this.photo.data? true : false;\n  }\n\n  private async readAsBase64(cameraPhoto: CameraPhoto) {\n    // Fetch the photo, read as a blob, then convert to base64 format\n    const response = await fetch(cameraPhoto.webPath!);\n    const blob = await response.blob();\n  \n    return await this.convertBlobToBase64(blob) as string;  \n  }\n  \n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onload = () => {\n        resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n\n\n  uploadImage(){\n    if(this.isLoadPthoto()){\n      if(this.photo.id){\n        return this.serviceImage.api_update(this.photo);\n      }else{\n        return this.serviceImage.api_create(this.photo);\n      }\n    }\n  }\n}\n\nexport class Photo {\n  id? : string;\n  filepath: string;\n  webviewPath: string;\n  data :string;\n  url : string;\n  thumb : boolean;\n  image ? :{}\n\n  constructor(  filepath : string = \"assets/images/pngwing.png\",webviewPath : string = null,data :string = '',url : string = '',thumb : boolean = false , image : any = null){\n    this.id = image ? image.id : '';\n    this.webviewPath = webviewPath;\n    this.filepath = filepath;\n    this.data = data;\n    this.url = url;\n    this.thumb = thumb;\n    this.image = image\n  }\n\n  getPath(){\n    if(this.webviewPath){\n      return this.webviewPath;\n    }\n    else if(this.image && this.image['urlComplete'] ){\n      return this.image['urlComplete'];\n    }else{\n      return this.filepath;\n    }\n  }\n}\n"]}