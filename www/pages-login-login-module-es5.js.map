{"version":3,"sources":["webpack:///src/app/pages/login/login.page.html","webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/pages/login/login.page.scss","webpack:///src/app/pages/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","authUserService","modalController","redirect","form","login","value","create","modal","onDidDismiss","then","data","present","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,6DAJlC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIkC,GAAtBH,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,eAAe;AAAA;AAAA,O;;AAAfA,qBAAe,6DAT3B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,4EAJO,CADD;AAORI,oBAAY,EAAE,CAAC,qDAAD;AAPN,OAAT,CAS2B,GAAfD,eAAe,CAAf;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFE,SAAS;AAEpB,2BACSC,eADT,EAESC,eAFT,EAEyC;AAAA;;AADhC,eAAAD,eAAA,GAAAA,eAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAGJ;;AAPe;AAAA;AAAA,qCAST;AACT,iBAAKD,eAAL,CAAqBE,QAArB;AACD;AAXmB;AAAA;AAAA,uCAaP;AACX;;;;;;;AAOD;AArBmB;AAAA;AAAA,gCAwBdC,IAxBc,EAwBV;AACR,iBAAKH,eAAL,CAAqBI,KAArB,CAA2BD,IAAI,CAACE,KAAhC;AACD;AA1BmB;AAAA;AAAA,sCA4BF;;;;;;;;AACF,6BAAM,KAAKJ,eAAL,CAAqBK,MAArB,CAA4B;AAC9Cd,iCAAS,EAAE;AADmC,uBAA5B,CAAN;;;AAARe,2B;AAINA,2BAAK,CAACC,YAAN,GAAqBC,IAArB,CAA0B,UAAAC,IAAI,EAAE,CAC9B;AACA;AACD,uBAHD;;AAKO,6BAAMH,KAAK,CAACI,OAAN,EAAN;;;;;;;;;;;;AACP;AAvCkB;;AAAA;AAAA,S;;;;gBAVb;;gBACA;;;;AASIZ,eAAS,6DALrB,gEAAU;AACTa,gBAAQ,EAAE,WADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,kGAFS;;;;AAAA,OAAV,CAKqB,GAATd,SAAS,CAAT","file":"pages-login-login-module-es5.js","sourcesContent":["export default \"<ion-content class=\\\"ion-padding ion-align-items-center\\\">\\n    <ion-grid >\\n      <ion-row class=\\\"ion-justify-content-center\\\">\\n        <ion-col class=\\\"ion-align-self-center\\\"  size-xs=\\\"12\\\">\\n          <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"login(form)\\\">\\n\\n            <div class=\\\"ion-text-center bg-l2 icon\\\">\\n\\n              <ion-img\\n                src=\\\"assets/icon/favicon.png\\\"\\n              ></ion-img>\\n\\n            </div>\\n            <div class=\\\"ion-padding\\\">\\n              <ion-item>\\n                <ion-input name=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"ejemplo@gmail.com\\\" ngModel required></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-input name=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Contraseña\\\" ngModel required></ion-input>\\n              </ion-item>\\n            </div>\\n            <div style=\\\"color: red; padding-top: 0.2rem\\\" >{{ authUserService.errorsLogin }}</div>\\n\\n            <div padding>\\n              <ion-button  type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" expand=\\\"block\\\">Iniciar Sesión</ion-button>\\n              <ion-button  expand=\\\"block\\\" (click)=\\\"openModal()\\\">Registrarme</ion-button>\\n            </div>\\n\\n\\n           \\n          </form>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"ion-grid {\\n  height: 100%;\\n}\\n\\nion-row {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n}\\n\\n.icon {\\n  max-width: 400px;\\n  border-radius: 70px;\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKOztBQUNBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxZQUFBO0FBRUo7O0FBQ0E7RUFDSSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtBQUVKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWdyaWR7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuaW9uLXJvd3tcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uaWNvbntcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDcwcHg7XG4gICAgbWFyZ2luOiBhdXRvO1xufSJdfQ== */\";","import { Component, OnInit } from '@angular/core';\n\nimport { AuthUserService } from 'src/app/services/auth-user.service';\nimport { ModalController } from '@ionic/angular';\nimport { UserFormPage } from '../user/user-form/user-form.page';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(\n    public authUserService : AuthUserService,\n    public modalController: ModalController,\n\n\n  ) { }\n\n  ngOnInit() {\n    this.authUserService.redirect();\n  }\n\n  googleAuth() {\n    /*this.googlePlus.login({})\n      .then(result => {\n        console.log(result);\n      })\n      .catch(err => console.log(`GoogleAuth Error`, JSON.stringify(err)));\n    //return this.AuthLogin(new firebase.auth.GoogleAuthProvider());\n    */\n  }\n\n\n  login(form){\n    this.authUserService.login(form.value);\n  }\n\n  async openModal() {\n    const modal = await this.modalController.create({\n      component: UserFormPage ,\n    });\n\n    modal.onDidDismiss().then(data=>{\n      //const user = data.data['user'];\n      //this.userService.listAddLast(user);\n    })\n\n    return await modal.present();\n   }\n\n}\n"]}